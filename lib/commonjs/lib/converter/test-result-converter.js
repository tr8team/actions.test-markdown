import { None, Some } from "../core/option.js";
import { emoji, resultToColor, resultToMarkdown } from "../util.js";
class TestResultConverter {
    convertHeader(header) {
        if (header.data.type === "test-result") {
            const f = emoji(header.data.result);
            const h = `## ${f}  ${header.name}\n`;
            const result = `
| Tests | Amount |
| ---- | -------- |
| Pass | ${header.data.pass} |
| Fail | ${header.data.fail} |
| Skip | ${header.data.skip} |
`;
            const policy = resultToMarkdown(header.data.resultDetails);
            return Some(`
${h}
Report: [Test Results](${header.url})
${result}
${policy}
`);
        }
        return None();
    }
    convertTable(table) {
        if (table.data.type === "test-result") {
            const color = resultToColor(table.data.result);
            const d = table.data;
            // ✔ HELLO | ✘ HELLO | ➟ HELLO
            return Some(`[![badge](https://img.shields.io/badge/test` +
                `-%E2%9C%94%20${d.pass}%20%7C%20%E2%9C%98%20${d.fail}%20%7C%20%E2%9E%9F%20${d.skip}` +
                `-${color})](${table.url})`);
        }
        return None();
    }
    convertBadge(table) {
        if (table.data.type === "test-result") {
            const color = resultToColor(table.data.result);
            const d = table.data;
            const n = encodeURIComponent(table.name);
            // ✔ HELLO | ✘ HELLO | ➟ HELLO
            return Some(`[![badge](https://img.shields.io/badge/${n}` +
                `-%E2%9C%94%20${d.pass}%20%7C%20%E2%9C%98%20${d.fail}%20%7C%20%E2%9E%9F%20${d.skip}` +
                `-${color})](${table.url})`);
        }
        return None();
    }
}
export { TestResultConverter };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC1yZXN1bHQtY29udmVydGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jb252ZXJ0ZXIvdGVzdC1yZXN1bHQtY29udmVydGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxJQUFJLEVBQVUsSUFBSSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLEtBQUssRUFBRSxhQUFhLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFHcEUsTUFBTSxtQkFBbUI7SUFDdkIsYUFBYSxDQUFDLE1BQW1CO1FBQy9CLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssYUFBYSxFQUFFO1lBQ3RDLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3BDLE1BQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBQyxLQUFLLE1BQU0sQ0FBQyxJQUFJLElBQUksQ0FBQztZQUN0QyxNQUFNLE1BQU0sR0FBRzs7O1dBR1YsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJO1dBQ2hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSTtXQUNoQixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUk7Q0FDMUIsQ0FBQztZQUNJLE1BQU0sTUFBTSxHQUFHLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDM0QsT0FBTyxJQUFJLENBQUM7RUFDaEIsQ0FBQzt5QkFDc0IsTUFBTSxDQUFDLEdBQUc7RUFDakMsTUFBTTtFQUNOLE1BQU07Q0FDUCxDQUFDLENBQUM7U0FDRTtRQUNELE9BQU8sSUFBSSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVELFlBQVksQ0FBQyxLQUFrQjtRQUM3QixJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLGFBQWEsRUFBRTtZQUNyQyxNQUFNLEtBQUssR0FBRyxhQUFhLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUMvQyxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDO1lBQ3JCLDhCQUE4QjtZQUM5QixPQUFPLElBQUksQ0FDVCw2Q0FBNkM7Z0JBQzNDLGdCQUFnQixDQUFDLENBQUMsSUFBSSx3QkFBd0IsQ0FBQyxDQUFDLElBQUksd0JBQXdCLENBQUMsQ0FBQyxJQUFJLEVBQUU7Z0JBQ3BGLElBQUksS0FBSyxNQUFNLEtBQUssQ0FBQyxHQUFHLEdBQUcsQ0FDOUIsQ0FBQztTQUNIO1FBQ0QsT0FBTyxJQUFJLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRUQsWUFBWSxDQUFDLEtBQWtCO1FBQzdCLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssYUFBYSxFQUFFO1lBQ3JDLE1BQU0sS0FBSyxHQUFHLGFBQWEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQy9DLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUM7WUFDckIsTUFBTSxDQUFDLEdBQUcsa0JBQWtCLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3pDLDhCQUE4QjtZQUM5QixPQUFPLElBQUksQ0FDVCwwQ0FBMEMsQ0FBQyxFQUFFO2dCQUMzQyxnQkFBZ0IsQ0FBQyxDQUFDLElBQUksd0JBQXdCLENBQUMsQ0FBQyxJQUFJLHdCQUF3QixDQUFDLENBQUMsSUFBSSxFQUFFO2dCQUNwRixJQUFJLEtBQUssTUFBTSxLQUFLLENBQUMsR0FBRyxHQUFHLENBQzlCLENBQUM7U0FDSDtRQUNELE9BQU8sSUFBSSxFQUFFLENBQUM7SUFDaEIsQ0FBQztDQUNGO0FBRUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRhRWxlbWVudCB9IGZyb20gXCIuLi9pbnB1dC5qc1wiO1xuaW1wb3J0IHsgTm9uZSwgT3B0aW9uLCBTb21lIH0gZnJvbSBcIi4uL2NvcmUvb3B0aW9uLmpzXCI7XG5pbXBvcnQgeyBlbW9qaSwgcmVzdWx0VG9Db2xvciwgcmVzdWx0VG9NYXJrZG93biB9IGZyb20gXCIuLi91dGlsLmpzXCI7XG5pbXBvcnQgeyBDb252ZXJ0ZXIgfSBmcm9tIFwiLi4vaW50ZXJmYWNlL2NvbnZlcnRlci5qc1wiO1xuXG5jbGFzcyBUZXN0UmVzdWx0Q29udmVydGVyIGltcGxlbWVudHMgQ29udmVydGVyIHtcbiAgY29udmVydEhlYWRlcihoZWFkZXI6IERhdGFFbGVtZW50KTogT3B0aW9uPHN0cmluZz4ge1xuICAgIGlmIChoZWFkZXIuZGF0YS50eXBlID09PSBcInRlc3QtcmVzdWx0XCIpIHtcbiAgICAgIGNvbnN0IGYgPSBlbW9qaShoZWFkZXIuZGF0YS5yZXN1bHQpO1xuICAgICAgY29uc3QgaCA9IGAjIyAke2Z9ICAke2hlYWRlci5uYW1lfVxcbmA7XG4gICAgICBjb25zdCByZXN1bHQgPSBgXG58IFRlc3RzIHwgQW1vdW50IHxcbnwgLS0tLSB8IC0tLS0tLS0tIHxcbnwgUGFzcyB8ICR7aGVhZGVyLmRhdGEucGFzc30gfFxufCBGYWlsIHwgJHtoZWFkZXIuZGF0YS5mYWlsfSB8XG58IFNraXAgfCAke2hlYWRlci5kYXRhLnNraXB9IHxcbmA7XG4gICAgICBjb25zdCBwb2xpY3kgPSByZXN1bHRUb01hcmtkb3duKGhlYWRlci5kYXRhLnJlc3VsdERldGFpbHMpO1xuICAgICAgcmV0dXJuIFNvbWUoYFxuJHtofVxuUmVwb3J0OiBbVGVzdCBSZXN1bHRzXSgke2hlYWRlci51cmx9KVxuJHtyZXN1bHR9XG4ke3BvbGljeX1cbmApO1xuICAgIH1cbiAgICByZXR1cm4gTm9uZSgpO1xuICB9XG5cbiAgY29udmVydFRhYmxlKHRhYmxlOiBEYXRhRWxlbWVudCk6IE9wdGlvbjxzdHJpbmc+IHtcbiAgICBpZiAodGFibGUuZGF0YS50eXBlID09PSBcInRlc3QtcmVzdWx0XCIpIHtcbiAgICAgIGNvbnN0IGNvbG9yID0gcmVzdWx0VG9Db2xvcih0YWJsZS5kYXRhLnJlc3VsdCk7XG4gICAgICBjb25zdCBkID0gdGFibGUuZGF0YTtcbiAgICAgIC8vIOKclCBIRUxMTyB8IOKcmCBIRUxMTyB8IOKenyBIRUxMT1xuICAgICAgcmV0dXJuIFNvbWUoXG4gICAgICAgIGBbIVtiYWRnZV0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS90ZXN0YCArXG4gICAgICAgICAgYC0lRTIlOUMlOTQlMjAke2QucGFzc30lMjAlN0MlMjAlRTIlOUMlOTglMjAke2QuZmFpbH0lMjAlN0MlMjAlRTIlOUUlOUYlMjAke2Quc2tpcH1gICtcbiAgICAgICAgICBgLSR7Y29sb3J9KV0oJHt0YWJsZS51cmx9KWAsXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gTm9uZSgpO1xuICB9XG5cbiAgY29udmVydEJhZGdlKHRhYmxlOiBEYXRhRWxlbWVudCk6IE9wdGlvbjxzdHJpbmc+IHtcbiAgICBpZiAodGFibGUuZGF0YS50eXBlID09PSBcInRlc3QtcmVzdWx0XCIpIHtcbiAgICAgIGNvbnN0IGNvbG9yID0gcmVzdWx0VG9Db2xvcih0YWJsZS5kYXRhLnJlc3VsdCk7XG4gICAgICBjb25zdCBkID0gdGFibGUuZGF0YTtcbiAgICAgIGNvbnN0IG4gPSBlbmNvZGVVUklDb21wb25lbnQodGFibGUubmFtZSk7XG4gICAgICAvLyDinJQgSEVMTE8gfCDinJggSEVMTE8gfCDinp8gSEVMTE9cbiAgICAgIHJldHVybiBTb21lKFxuICAgICAgICBgWyFbYmFkZ2VdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvJHtufWAgK1xuICAgICAgICAgIGAtJUUyJTlDJTk0JTIwJHtkLnBhc3N9JTIwJTdDJTIwJUUyJTlDJTk4JTIwJHtkLmZhaWx9JTIwJTdDJTIwJUUyJTlFJTlGJTIwJHtkLnNraXB9YCArXG4gICAgICAgICAgYC0ke2NvbG9yfSldKCR7dGFibGUudXJsfSlgLFxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIE5vbmUoKTtcbiAgfVxufVxuXG5leHBvcnQgeyBUZXN0UmVzdWx0Q29udmVydGVyIH07XG4iXX0=