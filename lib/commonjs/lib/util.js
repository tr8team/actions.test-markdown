import { Err, Ok } from "./core/result.js";
import { None, Some } from "./core/option.js";
function toResult(du) {
    if (du.success) {
        return Ok(du.data);
    }
    return Err(du.error);
}
function parseJSON(raw) {
    try {
        const json = JSON.parse(raw);
        return Ok(json);
    }
    catch (e) {
        return Err(e);
    }
}
function stringToOption(s) {
    if (s == null) {
        return None();
    }
    return s.length === 0 ? None() : Some(s);
}
function emoji(a) {
    switch (a) {
        case "pass":
            return "✅";
        case "fail":
            return "❌";
        case "warn":
            return "⚠️";
        default:
            return "❓";
    }
}
function resultToColor(a) {
    switch (a) {
        case "pass":
            return "brightgreen";
        case "fail":
            return "red";
        case "warn":
            return "yellow";
        default:
            return "lightgrey";
    }
}
function resultToMarkdown(p) {
    if (p.fail.length + p.warn.length + p.pass.length === 0)
        return "";
    const fail = p.fail.map((x) => `* ${emoji("fail")} ${x}`);
    const warn = p.warn.map((x) => `* ${emoji("warn")} ${x}`);
    const pass = p.pass.map((x) => `* ${emoji("pass")} ${x}`);
    return `##### Policies\n${[...fail, ...warn, ...pass].join("\n")}`;
}
export { toResult, parseJSON, stringToOption, emoji, resultToMarkdown, resultToColor, };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBVSxNQUFNLGtCQUFrQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxJQUFJLEVBQVUsSUFBSSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHdEQsU0FBUyxRQUFRLENBQ2YsRUFBb0U7SUFFcEUsSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFO1FBQ2QsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3BCO0lBQ0QsT0FBTyxHQUFHLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3ZCLENBQUM7QUFFRCxTQUFTLFNBQVMsQ0FBSSxHQUFXO0lBQy9CLElBQUk7UUFDRixNQUFNLElBQUksR0FBTSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hDLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2pCO0lBQUMsT0FBTyxDQUFDLEVBQUU7UUFDVixPQUFPLEdBQUcsQ0FBQyxDQUFVLENBQUMsQ0FBQztLQUN4QjtBQUNILENBQUM7QUFFRCxTQUFTLGNBQWMsQ0FBQyxDQUE0QjtJQUNsRCxJQUFJLENBQUMsSUFBSSxJQUFJLEVBQUU7UUFDYixPQUFPLElBQUksRUFBRSxDQUFDO0tBQ2Y7SUFDRCxPQUFPLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUM7QUFFRCxTQUFTLEtBQUssQ0FBQyxDQUFlO0lBQzVCLFFBQVEsQ0FBQyxFQUFFO1FBQ1QsS0FBSyxNQUFNO1lBQ1QsT0FBTyxHQUFHLENBQUM7UUFDYixLQUFLLE1BQU07WUFDVCxPQUFPLEdBQUcsQ0FBQztRQUNiLEtBQUssTUFBTTtZQUNULE9BQU8sSUFBSSxDQUFDO1FBQ2Q7WUFDRSxPQUFPLEdBQUcsQ0FBQztLQUNkO0FBQ0gsQ0FBQztBQUVELFNBQVMsYUFBYSxDQUFDLENBQWU7SUFDcEMsUUFBUSxDQUFDLEVBQUU7UUFDVCxLQUFLLE1BQU07WUFDVCxPQUFPLGFBQWEsQ0FBQztRQUN2QixLQUFLLE1BQU07WUFDVCxPQUFPLEtBQUssQ0FBQztRQUNmLEtBQUssTUFBTTtZQUNULE9BQU8sUUFBUSxDQUFDO1FBQ2xCO1lBQ0UsT0FBTyxXQUFXLENBQUM7S0FDdEI7QUFDSCxDQUFDO0FBRUQsU0FBUyxnQkFBZ0IsQ0FBQyxDQUFhO0lBQ3JDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQztRQUFFLE9BQU8sRUFBRSxDQUFDO0lBQ25FLE1BQU0sSUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzFELE1BQU0sSUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzFELE1BQU0sSUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzFELE9BQU8sbUJBQW1CLENBQUMsR0FBRyxJQUFJLEVBQUUsR0FBRyxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztBQUNyRSxDQUFDO0FBRUQsT0FBTyxFQUNMLFFBQVEsRUFDUixTQUFTLEVBQ1QsY0FBYyxFQUNkLEtBQUssRUFDTCxnQkFBZ0IsRUFDaEIsYUFBYSxHQUNkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBab2RFcnJvciB9IGZyb20gXCJ6b2RcIjtcbmltcG9ydCB7IEVyciwgT2ssIFJlc3VsdCB9IGZyb20gXCIuL2NvcmUvcmVzdWx0LmpzXCI7XG5pbXBvcnQgeyBOb25lLCBPcHRpb24sIFNvbWUgfSBmcm9tIFwiLi9jb3JlL29wdGlvbi5qc1wiO1xuaW1wb3J0IHsgUG9saWN5RGF0YSwgUG9saWN5UmVzdWx0IH0gZnJvbSBcIi4vaW5wdXQuanNcIjtcblxuZnVuY3Rpb24gdG9SZXN1bHQ8VD4oXG4gIGR1OiB7IHN1Y2Nlc3M6IHRydWU7IGRhdGE6IFQgfSB8IHsgc3VjY2VzczogZmFsc2U7IGVycm9yOiBab2RFcnJvciB9XG4pOiBSZXN1bHQ8VCwgWm9kRXJyb3I+IHtcbiAgaWYgKGR1LnN1Y2Nlc3MpIHtcbiAgICByZXR1cm4gT2soZHUuZGF0YSk7XG4gIH1cbiAgcmV0dXJuIEVycihkdS5lcnJvcik7XG59XG5cbmZ1bmN0aW9uIHBhcnNlSlNPTjxUPihyYXc6IHN0cmluZyk6IFJlc3VsdDxULCBFcnJvcj4ge1xuICB0cnkge1xuICAgIGNvbnN0IGpzb246IFQgPSBKU09OLnBhcnNlKHJhdyk7XG4gICAgcmV0dXJuIE9rKGpzb24pO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIEVycihlIGFzIEVycm9yKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzdHJpbmdUb09wdGlvbihzOiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKTogT3B0aW9uPHN0cmluZz4ge1xuICBpZiAocyA9PSBudWxsKSB7XG4gICAgcmV0dXJuIE5vbmUoKTtcbiAgfVxuICByZXR1cm4gcy5sZW5ndGggPT09IDAgPyBOb25lKCkgOiBTb21lKHMpO1xufVxuXG5mdW5jdGlvbiBlbW9qaShhOiBQb2xpY3lSZXN1bHQpIHtcbiAgc3dpdGNoIChhKSB7XG4gICAgY2FzZSBcInBhc3NcIjpcbiAgICAgIHJldHVybiBcIuKchVwiO1xuICAgIGNhc2UgXCJmYWlsXCI6XG4gICAgICByZXR1cm4gXCLinYxcIjtcbiAgICBjYXNlIFwid2FyblwiOlxuICAgICAgcmV0dXJuIFwi4pqg77iPXCI7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBcIuKdk1wiO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlc3VsdFRvQ29sb3IoYTogUG9saWN5UmVzdWx0KSB7XG4gIHN3aXRjaCAoYSkge1xuICAgIGNhc2UgXCJwYXNzXCI6XG4gICAgICByZXR1cm4gXCJicmlnaHRncmVlblwiO1xuICAgIGNhc2UgXCJmYWlsXCI6XG4gICAgICByZXR1cm4gXCJyZWRcIjtcbiAgICBjYXNlIFwid2FyblwiOlxuICAgICAgcmV0dXJuIFwieWVsbG93XCI7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBcImxpZ2h0Z3JleVwiO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlc3VsdFRvTWFya2Rvd24ocDogUG9saWN5RGF0YSk6IHN0cmluZyB7XG4gIGlmIChwLmZhaWwubGVuZ3RoICsgcC53YXJuLmxlbmd0aCArIHAucGFzcy5sZW5ndGggPT09IDApIHJldHVybiBcIlwiO1xuICBjb25zdCBmYWlsID0gcC5mYWlsLm1hcCgoeCkgPT4gYCogJHtlbW9qaShcImZhaWxcIil9ICR7eH1gKTtcbiAgY29uc3Qgd2FybiA9IHAud2Fybi5tYXAoKHgpID0+IGAqICR7ZW1vamkoXCJ3YXJuXCIpfSAke3h9YCk7XG4gIGNvbnN0IHBhc3MgPSBwLnBhc3MubWFwKCh4KSA9PiBgKiAke2Vtb2ppKFwicGFzc1wiKX0gJHt4fWApO1xuICByZXR1cm4gYCMjIyMjIFBvbGljaWVzXFxuJHtbLi4uZmFpbCwgLi4ud2FybiwgLi4ucGFzc10uam9pbihcIlxcblwiKX1gO1xufVxuXG5leHBvcnQge1xuICB0b1Jlc3VsdCxcbiAgcGFyc2VKU09OLFxuICBzdHJpbmdUb09wdGlvbixcbiAgZW1vamksXG4gIHJlc3VsdFRvTWFya2Rvd24sXG4gIHJlc3VsdFRvQ29sb3IsXG59O1xuIl19
